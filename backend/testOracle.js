// ==============================
// Teste de conex√£o Oracle ADB com wallet
// ==============================

// Define TNS_ADMIN dentro do Node.js para garantir que sempre use C:\OracleWallet
process.env.TNS_ADMIN = 'C:\\OracleWallet';

const oracledb = require('oracledb');
const fs = require('fs');
const path = process.env.TNS_ADMIN;

// ------------------------------
// Debug: listar arquivos da wallet
// ------------------------------
console.log('üìÇ Arquivos na wallet em', path);
try {
  const files = fs.readdirSync(path);
  files.forEach(file => console.log(' -', file));
} catch (err) {
  console.error('‚ùå N√£o foi poss√≠vel listar os arquivos da wallet:', err);
  process.exit(1);
}

// ------------------------------
// Debug: testar leitura dos arquivos cr√≠ticos
// ------------------------------
['cwallet.sso','ewallet.p12','sqlnet.ora','tnsnames.ora','truststore.jks'].forEach(file => {
  try {
    fs.accessSync(`${path}\\${file}`, fs.constants.R_OK);
    console.log(`‚úÖ ${file} pode ser lido.`);
  } catch(err) {
    console.error(`‚ùå ${file} N√ÉO pode ser lido:`, err.message);
  }
});

// Inicializar Oracle Client (modo Thick) para suportar TCPS/Wallet
try {
  oracledb.initOracleClient({ libDir: 'C:\\Oracle\\instantclient_23_9' });
  console.log('‚úÖ Oracle Client inicializado com sucesso.');
} catch (err) {
  console.error('‚ùå Erro ao inicializar Oracle Client:', err);
  process.exit(1);
}

// ------------------------------
// Fun√ß√£o de teste de conex√£o
// ------------------------------
async function testConnection() {
  let connection;

  try {
    connection = await oracledb.getConnection({
      user: 'ADMIN',              // usu√°rio Oracle
      password: 'CepasDatabase@2025', // senha Oracle
      connectString: 'cepasdb_high'   // connect string do tnsnames.ora
    });

    console.log('‚úÖ Conex√£o bem-sucedida!');

    const result = await connection.execute(
      `SELECT table_name FROM user_tables ORDER BY table_name`
    );

    if (!result.rows || result.rows.length === 0) {
      console.log('‚ö†Ô∏è Nenhuma tabela encontrada para o usu√°rio.');
    } else {
      console.log('üìã Tabelas do usu√°rio:');
      result.rows.forEach(row => console.log(' -', row[0]));
    }

  } catch (err) {
    if (err.errorNum === 28759) {
      console.error('‚ùå Erro ORA-28759: Problema ao abrir arquivos da wallet.');
    } else if (err.code === 'NJS-511') {
      console.error('‚ùå Erro NJS-511: Conex√£o recusada pelo listener.');
    } else {
      console.error('‚ùå Erro na conex√£o:', err);
    }
  } finally {
    if (connection) {
      try {
        await connection.close();
        console.log('üîí Conex√£o encerrada com sucesso.');
      } catch (err) {
        console.error('‚ùå Erro ao fechar a conex√£o:', err);
      }
    }
  }
}

// Executa o teste de conex√£o
testConnection();
