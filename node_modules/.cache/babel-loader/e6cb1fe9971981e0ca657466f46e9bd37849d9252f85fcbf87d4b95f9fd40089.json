{"ast":null,"code":"/**\r\n * validationHelpers.js\r\n * Funções auxiliares para validação de dados do formulário de família\r\n *//**\r\n * Valida os dados básicos da família\r\n * @param {Object} familiaData - Dados da família\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateFamiliaData(familiaData){const errors=[];// Validações obrigatórias\nif(!familiaData.nome_familia||familiaData.nome_familia.trim()===''){errors.push('Nome da família é obrigatório');}if(familiaData.nome_familia&&familiaData.nome_familia.length>150){errors.push('Nome da família deve ter no máximo 150 caracteres');}// Validações opcionais com limite de caracteres\nif(familiaData.migracao&&familiaData.migracao.length>50){errors.push('Campo migração deve ter no máximo 50 caracteres');}if(familiaData.estado_origem&&familiaData.estado_origem.length>80){errors.push('Estado de origem deve ter no máximo 80 caracteres');}if(familiaData.cidade_origem&&familiaData.cidade_origem.length>80){errors.push('Cidade de origem deve ter no máximo 80 caracteres');}if(familiaData.convenio&&familiaData.convenio.length>120){errors.push('Nome do convênio deve ter no máximo 120 caracteres');}// Validação de campos numéricos (0 ou 1)\nif(![0,1].includes(familiaData.recebe_beneficio)){errors.push('Campo \"Recebe Benefício\" deve ser 0 ou 1');}if(![0,1].includes(familiaData.possui_plano_saude)){errors.push('Campo \"Possui Plano de Saúde\" deve ser 0 ou 1');}return{isValid:errors.length===0,errors};}/**\r\n * Valida os dados do endereço\r\n * @param {Object} enderecoData - Dados do endereço\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateEnderecoData(enderecoData){const errors=[];if(enderecoData.quadra&&enderecoData.quadra.length>30){errors.push('Quadra deve ter no máximo 30 caracteres');}if(enderecoData.rua&&enderecoData.rua.length>100){errors.push('Rua deve ter no máximo 100 caracteres');}if(enderecoData.numero_casa&&enderecoData.numero_casa.length>20){errors.push('Número da casa deve ter no máximo 20 caracteres');}if(enderecoData.complemento&&enderecoData.complemento.length>150){errors.push('Complemento deve ter no máximo 150 caracteres');}return{isValid:errors.length===0,errors};}/**\r\n * Valida os dados dos animais\r\n * @param {Object} animalData - Dados dos animais\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateAnimalData(animalData){const errors=[];if(![0,1].includes(animalData.tem_animal)){errors.push('Campo \"Possui Animais\" deve ser 0 ou 1');}if(animalData.tem_animal===1){if(!animalData.qtd_animais||animalData.qtd_animais<1){errors.push('Quantidade de animais deve ser informada quando possui animais');}if(!animalData.qual_animal||animalData.qual_animal.trim()===''){errors.push('Tipo de animais deve ser informado quando possui animais');}}if(animalData.qual_animal&&animalData.qual_animal.length>30){errors.push('Tipo de animais deve ter no máximo 30 caracteres');}return{isValid:errors.length===0,errors};}/**\r\n * Valida os dados da estrutura da habitação\r\n * @param {Object} estruturaData - Dados da estrutura\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateEstruturaData(estruturaData){const errors=[];const tiposHabitacao=['Casa','Apartamento','Barraco','Outro'];const tiposLote=['Próprio','Alugado','Cedido','Financiado'];const situacoesConvivencia=['Somente a família','Com outras famílias','Com parentes'];const materiaisParede=['Tijolo','Adobe','Madeira','Lona','Outro'];const materiaisPiso=['Cimento','Cerâmica','Terra batida','Madeira','Outro'];const materiaisCobertura=['Telha','Laje','Zinco','Lona','Outro'];if(estruturaData.tipo_habitacao&&!tiposHabitacao.includes(estruturaData.tipo_habitacao)){errors.push('Tipo de habitação inválido');}if(estruturaData.tipo_lote&&!tiposLote.includes(estruturaData.tipo_lote)){errors.push('Tipo de lote inválido');}if(estruturaData.situacao_convivencia&&!situacoesConvivencia.includes(estruturaData.situacao_convivencia)){errors.push('Situação de convivência inválida');}if(estruturaData.material_parede&&!materiaisParede.includes(estruturaData.material_parede)){errors.push('Material da parede inválido');}if(estruturaData.material_piso&&!materiaisPiso.includes(estruturaData.material_piso)){errors.push('Material do piso inválido');}if(estruturaData.material_cobertura&&!materiaisCobertura.includes(estruturaData.material_cobertura)){errors.push('Material da cobertura inválido');}if(![0,1].includes(estruturaData.energia_eletrica)){errors.push('Campo \"Energia Elétrica\" deve ser 0 ou 1');}if(estruturaData.qtd_quartos&&estruturaData.qtd_quartos<0){errors.push('Quantidade de quartos não pode ser negativa');}if(estruturaData.qtd_camas&&estruturaData.qtd_camas<0){errors.push('Quantidade de camas não pode ser negativa');}if(estruturaData.tipo_camas&&estruturaData.tipo_camas.length>100){errors.push('Tipo de camas deve ter no máximo 100 caracteres');}return{isValid:errors.length===0,errors};}/**\r\n * Valida os dados de saneamento\r\n * @param {Object} saneamentoData - Dados de saneamento\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateSaneamentoData(saneamentoData){const errors=[];const destinosLixo=['Coleta pública','Céu aberto','Enterra','Queima'];const tiposBebeAgua=['Filtrada','Fervida','Tratada','Sem tratamento'];const oriensAgua=['Fervida','Coleta','Cisterna','Poço'];if(![0,1].includes(saneamentoData.horta)){errors.push('Campo \"Horta\" deve ser 0 ou 1');}if(![0,1].includes(saneamentoData.arvore_frutifera)){errors.push('Campo \"Árvore Frutífera\" deve ser 0 ou 1');}if(![0,1].includes(saneamentoData.tem_banheiro)){errors.push('Campo \"Tem Banheiro\" deve ser 0 ou 1');}if(saneamentoData.dest_lixo&&!destinosLixo.includes(saneamentoData.dest_lixo)){errors.push('Destino do lixo inválido');}if(saneamentoData.bebe_agua&&!tiposBebeAgua.includes(saneamentoData.bebe_agua)){errors.push('Tipo de água para beber inválido');}if(saneamentoData.trata_agua&&!oriensAgua.includes(saneamentoData.trata_agua)){errors.push('Origem da água inválida');}return{isValid:errors.length===0,errors};}/**\r\n * Valida todos os dados do formulário completo\r\n * @param {Object} formData - Dados completos do formulário\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateCompleteForm(formData){const allErrors=[];// Valida dados da família\nconst familiaValidation=validateFamiliaData(formData);allErrors.push(...familiaValidation.errors);// Valida endereço se fornecido\nif(formData.endereco&&Object.keys(formData.endereco).some(key=>formData.endereco[key])){const enderecoValidation=validateEnderecoData(formData.endereco);allErrors.push(...enderecoValidation.errors);}// Valida dados de animais\nif(formData.animal){const animalValidation=validateAnimalData(formData.animal);allErrors.push(...animalValidation.errors);}// Valida estrutura se fornecida\nif(formData.estrutura&&Object.keys(formData.estrutura).some(key=>formData.estrutura[key]!==''&&formData.estrutura[key]!==null)){const estruturaValidation=validateEstruturaData(formData.estrutura);allErrors.push(...estruturaValidation.errors);}// Valida saneamento se fornecido\nif(formData.saneamento&&Object.keys(formData.saneamento).some(key=>formData.saneamento[key]!==''&&formData.saneamento[key]!==null)){const saneamentoValidation=validateSaneamentoData(formData.saneamento);allErrors.push(...saneamentoValidation.errors);}// Valida membros se fornecidos\nif(formData.membros&&Array.isArray(formData.membros)){const membrosValidation=validateMembrosData(formData.membros);allErrors.push(...membrosValidation.errors);}// Valida entrevista se fornecida\nif(formData.entrevista){const entrevistaValidation=validateEntrevistaData(formData.entrevista);allErrors.push(...entrevistaValidation.errors);}return{isValid:allErrors.length===0,errors:allErrors};}/**\r\n * Valida dados dos membros da família\r\n * @param {Array} membros - Array de membros\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateMembrosData(membros){const errors=[];if(!Array.isArray(membros)){errors.push('Lista de membros deve ser um array');return{isValid:false,errors};}// Validar cada membro\nmembros.forEach((membro,index)=>{const membroNum=index+1;// Nome é obrigatório\nif(!membro.nome||membro.nome.trim()===''){errors.push(\"Membro \".concat(membroNum,\": Nome \\xE9 obrigat\\xF3rio\"));}if(membro.nome&&membro.nome.length>150){errors.push(\"Membro \".concat(membroNum,\": Nome deve ter no m\\xE1ximo 150 caracteres\"));}// Validar data de nascimento se fornecida\nif(membro.data_nascimento){const nascimento=new Date(membro.data_nascimento);const hoje=new Date();if(nascimento>hoje){errors.push(\"Membro \".concat(membroNum,\": Data de nascimento n\\xE3o pode ser futura\"));}const idade=hoje.getFullYear()-nascimento.getFullYear();if(idade>150){errors.push(\"Membro \".concat(membroNum,\": Data de nascimento parece inv\\xE1lida (idade muito alta)\"));}}// Validar campos de texto com limite\nif(membro.relacao&&membro.relacao.length>80){errors.push(\"Membro \".concat(membroNum,\": Rela\\xE7\\xE3o deve ter no m\\xE1ximo 80 caracteres\"));}if(membro.ocupacao&&membro.ocupacao.length>120){errors.push(\"Membro \".concat(membroNum,\": Ocupa\\xE7\\xE3o deve ter no m\\xE1ximo 120 caracteres\"));}if(membro.religiao&&membro.religiao.length>80){errors.push(\"Membro \".concat(membroNum,\": Religi\\xE3o deve ter no m\\xE1ximo 80 caracteres\"));}// Validar criança CEPAS se ativa\nif(membro.crianca_cepas&&membro.crianca_cepas.ativa){if(!membro.crianca_cepas.data_inicio){errors.push(\"Membro \".concat(membroNum,\": Data de in\\xEDcio no CEPAS \\xE9 obrigat\\xF3ria quando participa do programa\"));}}});return{isValid:errors.length===0,errors};}/**\r\n * Valida dados da entrevista\r\n * @param {Object} entrevista - Dados da entrevista\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */export function validateEntrevistaData(entrevista){const errors=[];// Data da entrevista é obrigatória\nif(!entrevista.data_entrevista){errors.push('Data da entrevista é obrigatória');}else{const dataEntrevista=new Date(entrevista.data_entrevista);const hoje=new Date();if(dataEntrevista>hoje){errors.push('Data da entrevista não pode ser futura');}}// Validar limites de caracteres\nif(entrevista.entrevistado&&entrevista.entrevistado.length>150){errors.push('Nome do entrevistado deve ter no máximo 150 caracteres');}if(entrevista.telefone_contato&&entrevista.telefone_contato.length>30){errors.push('Telefone de contato deve ter no máximo 30 caracteres');}return{isValid:errors.length===0,errors};}/**\r\n * Formata mensagens de erro para exibição\r\n * @param {string[]} errors - Array de erros\r\n * @returns {string} Mensagem formatada\r\n */export function formatErrorMessages(errors){if(errors.length===0)return'';if(errors.length===1){return errors[0];}return\"Foram encontrados \".concat(errors.length,\" problemas:\\n\\u2022 \").concat(errors.join('\\n• '));}","map":{"version":3,"names":["validateFamiliaData","familiaData","errors","nome_familia","trim","push","length","migracao","estado_origem","cidade_origem","convenio","includes","recebe_beneficio","possui_plano_saude","isValid","validateEnderecoData","enderecoData","quadra","rua","numero_casa","complemento","validateAnimalData","animalData","tem_animal","qtd_animais","qual_animal","validateEstruturaData","estruturaData","tiposHabitacao","tiposLote","situacoesConvivencia","materiaisParede","materiaisPiso","materiaisCobertura","tipo_habitacao","tipo_lote","situacao_convivencia","material_parede","material_piso","material_cobertura","energia_eletrica","qtd_quartos","qtd_camas","tipo_camas","validateSaneamentoData","saneamentoData","destinosLixo","tiposBebeAgua","oriensAgua","horta","arvore_frutifera","tem_banheiro","dest_lixo","bebe_agua","trata_agua","validateCompleteForm","formData","allErrors","familiaValidation","endereco","Object","keys","some","key","enderecoValidation","animal","animalValidation","estrutura","estruturaValidation","saneamento","saneamentoValidation","membros","Array","isArray","membrosValidation","validateMembrosData","entrevista","entrevistaValidation","validateEntrevistaData","forEach","membro","index","membroNum","nome","concat","data_nascimento","nascimento","Date","hoje","idade","getFullYear","relacao","ocupacao","religiao","crianca_cepas","ativa","data_inicio","data_entrevista","dataEntrevista","entrevistado","telefone_contato","formatErrorMessages","join"],"sources":["C:/Users/JoaoPedro/Desktop/CEPAS/src/utils/validationHelpers.js"],"sourcesContent":["/**\r\n * validationHelpers.js\r\n * Funções auxiliares para validação de dados do formulário de família\r\n */\r\n\r\n/**\r\n * Valida os dados básicos da família\r\n * @param {Object} familiaData - Dados da família\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateFamiliaData(familiaData) {\r\n    const errors = [];\r\n\r\n    // Validações obrigatórias\r\n    if (!familiaData.nome_familia || familiaData.nome_familia.trim() === '') {\r\n        errors.push('Nome da família é obrigatório');\r\n    }\r\n\r\n    if (familiaData.nome_familia && familiaData.nome_familia.length > 150) {\r\n        errors.push('Nome da família deve ter no máximo 150 caracteres');\r\n    }\r\n\r\n    // Validações opcionais com limite de caracteres\r\n    if (familiaData.migracao && familiaData.migracao.length > 50) {\r\n        errors.push('Campo migração deve ter no máximo 50 caracteres');\r\n    }\r\n\r\n    if (familiaData.estado_origem && familiaData.estado_origem.length > 80) {\r\n        errors.push('Estado de origem deve ter no máximo 80 caracteres');\r\n    }\r\n\r\n    if (familiaData.cidade_origem && familiaData.cidade_origem.length > 80) {\r\n        errors.push('Cidade de origem deve ter no máximo 80 caracteres');\r\n    }\r\n\r\n    if (familiaData.convenio && familiaData.convenio.length > 120) {\r\n        errors.push('Nome do convênio deve ter no máximo 120 caracteres');\r\n    }\r\n\r\n    // Validação de campos numéricos (0 ou 1)\r\n    if (![0, 1].includes(familiaData.recebe_beneficio)) {\r\n        errors.push('Campo \"Recebe Benefício\" deve ser 0 ou 1');\r\n    }\r\n\r\n    if (![0, 1].includes(familiaData.possui_plano_saude)) {\r\n        errors.push('Campo \"Possui Plano de Saúde\" deve ser 0 ou 1');\r\n    }\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n    };\r\n}\r\n\r\n/**\r\n * Valida os dados do endereço\r\n * @param {Object} enderecoData - Dados do endereço\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateEnderecoData(enderecoData) {\r\n    const errors = [];\r\n\r\n    if (enderecoData.quadra && enderecoData.quadra.length > 30) {\r\n        errors.push('Quadra deve ter no máximo 30 caracteres');\r\n    }\r\n\r\n    if (enderecoData.rua && enderecoData.rua.length > 100) {\r\n        errors.push('Rua deve ter no máximo 100 caracteres');\r\n    }\r\n\r\n    if (enderecoData.numero_casa && enderecoData.numero_casa.length > 20) {\r\n        errors.push('Número da casa deve ter no máximo 20 caracteres');\r\n    }\r\n\r\n    if (enderecoData.complemento && enderecoData.complemento.length > 150) {\r\n        errors.push('Complemento deve ter no máximo 150 caracteres');\r\n    }\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n    };\r\n}\r\n\r\n/**\r\n * Valida os dados dos animais\r\n * @param {Object} animalData - Dados dos animais\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateAnimalData(animalData) {\r\n    const errors = [];\r\n\r\n    if (![0, 1].includes(animalData.tem_animal)) {\r\n        errors.push('Campo \"Possui Animais\" deve ser 0 ou 1');\r\n    }\r\n\r\n    if (animalData.tem_animal === 1) {\r\n        if (!animalData.qtd_animais || animalData.qtd_animais < 1) {\r\n            errors.push('Quantidade de animais deve ser informada quando possui animais');\r\n        }\r\n\r\n        if (!animalData.qual_animal || animalData.qual_animal.trim() === '') {\r\n            errors.push('Tipo de animais deve ser informado quando possui animais');\r\n        }\r\n    }\r\n\r\n    if (animalData.qual_animal && animalData.qual_animal.length > 30) {\r\n        errors.push('Tipo de animais deve ter no máximo 30 caracteres');\r\n    }\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n    };\r\n}\r\n\r\n/**\r\n * Valida os dados da estrutura da habitação\r\n * @param {Object} estruturaData - Dados da estrutura\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateEstruturaData(estruturaData) {\r\n    const errors = [];\r\n\r\n    const tiposHabitacao = ['Casa', 'Apartamento', 'Barraco', 'Outro'];\r\n    const tiposLote = ['Próprio', 'Alugado', 'Cedido', 'Financiado'];\r\n    const situacoesConvivencia = ['Somente a família', 'Com outras famílias', 'Com parentes'];\r\n    const materiaisParede = ['Tijolo', 'Adobe', 'Madeira', 'Lona', 'Outro'];\r\n    const materiaisPiso = ['Cimento', 'Cerâmica', 'Terra batida', 'Madeira', 'Outro'];\r\n    const materiaisCobertura = ['Telha', 'Laje', 'Zinco', 'Lona', 'Outro'];\r\n\r\n    if (estruturaData.tipo_habitacao && !tiposHabitacao.includes(estruturaData.tipo_habitacao)) {\r\n        errors.push('Tipo de habitação inválido');\r\n    }\r\n\r\n    if (estruturaData.tipo_lote && !tiposLote.includes(estruturaData.tipo_lote)) {\r\n        errors.push('Tipo de lote inválido');\r\n    }\r\n\r\n    if (estruturaData.situacao_convivencia && !situacoesConvivencia.includes(estruturaData.situacao_convivencia)) {\r\n        errors.push('Situação de convivência inválida');\r\n    }\r\n\r\n    if (estruturaData.material_parede && !materiaisParede.includes(estruturaData.material_parede)) {\r\n        errors.push('Material da parede inválido');\r\n    }\r\n\r\n    if (estruturaData.material_piso && !materiaisPiso.includes(estruturaData.material_piso)) {\r\n        errors.push('Material do piso inválido');\r\n    }\r\n\r\n    if (estruturaData.material_cobertura && !materiaisCobertura.includes(estruturaData.material_cobertura)) {\r\n        errors.push('Material da cobertura inválido');\r\n    }\r\n\r\n    if (![0, 1].includes(estruturaData.energia_eletrica)) {\r\n        errors.push('Campo \"Energia Elétrica\" deve ser 0 ou 1');\r\n    }\r\n\r\n    if (estruturaData.qtd_quartos && estruturaData.qtd_quartos < 0) {\r\n        errors.push('Quantidade de quartos não pode ser negativa');\r\n    }\r\n\r\n    if (estruturaData.qtd_camas && estruturaData.qtd_camas < 0) {\r\n        errors.push('Quantidade de camas não pode ser negativa');\r\n    }\r\n\r\n    if (estruturaData.tipo_camas && estruturaData.tipo_camas.length > 100) {\r\n        errors.push('Tipo de camas deve ter no máximo 100 caracteres');\r\n    }\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n    };\r\n}\r\n\r\n/**\r\n * Valida os dados de saneamento\r\n * @param {Object} saneamentoData - Dados de saneamento\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateSaneamentoData(saneamentoData) {\r\n    const errors = [];\r\n\r\n    const destinosLixo = ['Coleta pública', 'Céu aberto', 'Enterra', 'Queima'];\r\n    const tiposBebeAgua = ['Filtrada', 'Fervida', 'Tratada', 'Sem tratamento'];\r\n    const oriensAgua = ['Fervida', 'Coleta', 'Cisterna', 'Poço'];\r\n\r\n    if (![0, 1].includes(saneamentoData.horta)) {\r\n        errors.push('Campo \"Horta\" deve ser 0 ou 1');\r\n    }\r\n\r\n    if (![0, 1].includes(saneamentoData.arvore_frutifera)) {\r\n        errors.push('Campo \"Árvore Frutífera\" deve ser 0 ou 1');\r\n    }\r\n\r\n    if (![0, 1].includes(saneamentoData.tem_banheiro)) {\r\n        errors.push('Campo \"Tem Banheiro\" deve ser 0 ou 1');\r\n    }\r\n\r\n    if (saneamentoData.dest_lixo && !destinosLixo.includes(saneamentoData.dest_lixo)) {\r\n        errors.push('Destino do lixo inválido');\r\n    }\r\n\r\n    if (saneamentoData.bebe_agua && !tiposBebeAgua.includes(saneamentoData.bebe_agua)) {\r\n        errors.push('Tipo de água para beber inválido');\r\n    }\r\n\r\n    if (saneamentoData.trata_agua && !oriensAgua.includes(saneamentoData.trata_agua)) {\r\n        errors.push('Origem da água inválida');\r\n    }\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n    };\r\n}\r\n\r\n/**\r\n * Valida todos os dados do formulário completo\r\n * @param {Object} formData - Dados completos do formulário\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateCompleteForm(formData) {\r\n    const allErrors = [];\r\n\r\n    // Valida dados da família\r\n    const familiaValidation = validateFamiliaData(formData);\r\n    allErrors.push(...familiaValidation.errors);\r\n\r\n    // Valida endereço se fornecido\r\n    if (formData.endereco && Object.keys(formData.endereco).some(key => formData.endereco[key])) {\r\n        const enderecoValidation = validateEnderecoData(formData.endereco);\r\n        allErrors.push(...enderecoValidation.errors);\r\n    }\r\n\r\n    // Valida dados de animais\r\n    if (formData.animal) {\r\n        const animalValidation = validateAnimalData(formData.animal);\r\n        allErrors.push(...animalValidation.errors);\r\n    }\r\n\r\n    // Valida estrutura se fornecida\r\n    if (formData.estrutura && Object.keys(formData.estrutura).some(key => formData.estrutura[key] !== '' && formData.estrutura[key] !== null)) {\r\n        const estruturaValidation = validateEstruturaData(formData.estrutura);\r\n        allErrors.push(...estruturaValidation.errors);\r\n    }\r\n\r\n    // Valida saneamento se fornecido\r\n    if (formData.saneamento && Object.keys(formData.saneamento).some(key => formData.saneamento[key] !== '' && formData.saneamento[key] !== null)) {\r\n        const saneamentoValidation = validateSaneamentoData(formData.saneamento);\r\n        allErrors.push(...saneamentoValidation.errors);\r\n    }\r\n\r\n    // Valida membros se fornecidos\r\n    if (formData.membros && Array.isArray(formData.membros)) {\r\n        const membrosValidation = validateMembrosData(formData.membros);\r\n        allErrors.push(...membrosValidation.errors);\r\n    }\r\n\r\n    // Valida entrevista se fornecida\r\n    if (formData.entrevista) {\r\n        const entrevistaValidation = validateEntrevistaData(formData.entrevista);\r\n        allErrors.push(...entrevistaValidation.errors);\r\n    }\r\n\r\n    return {\r\n        isValid: allErrors.length === 0,\r\n        errors: allErrors\r\n    };\r\n}\r\n\r\n/**\r\n * Valida dados dos membros da família\r\n * @param {Array} membros - Array de membros\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateMembrosData(membros) {\r\n    const errors = [];\r\n\r\n    if (!Array.isArray(membros)) {\r\n        errors.push('Lista de membros deve ser um array');\r\n        return { isValid: false, errors };\r\n    }\r\n\r\n    // Validar cada membro\r\n    membros.forEach((membro, index) => {\r\n        const membroNum = index + 1;\r\n\r\n        // Nome é obrigatório\r\n        if (!membro.nome || membro.nome.trim() === '') {\r\n            errors.push(`Membro ${membroNum}: Nome é obrigatório`);\r\n        }\r\n\r\n        if (membro.nome && membro.nome.length > 150) {\r\n            errors.push(`Membro ${membroNum}: Nome deve ter no máximo 150 caracteres`);\r\n        }\r\n\r\n        // Validar data de nascimento se fornecida\r\n        if (membro.data_nascimento) {\r\n            const nascimento = new Date(membro.data_nascimento);\r\n            const hoje = new Date();\r\n            \r\n            if (nascimento > hoje) {\r\n                errors.push(`Membro ${membroNum}: Data de nascimento não pode ser futura`);\r\n            }\r\n            \r\n            const idade = hoje.getFullYear() - nascimento.getFullYear();\r\n            if (idade > 150) {\r\n                errors.push(`Membro ${membroNum}: Data de nascimento parece inválida (idade muito alta)`);\r\n            }\r\n        }\r\n\r\n        // Validar campos de texto com limite\r\n        if (membro.relacao && membro.relacao.length > 80) {\r\n            errors.push(`Membro ${membroNum}: Relação deve ter no máximo 80 caracteres`);\r\n        }\r\n\r\n        if (membro.ocupacao && membro.ocupacao.length > 120) {\r\n            errors.push(`Membro ${membroNum}: Ocupação deve ter no máximo 120 caracteres`);\r\n        }\r\n\r\n        if (membro.religiao && membro.religiao.length > 80) {\r\n            errors.push(`Membro ${membroNum}: Religião deve ter no máximo 80 caracteres`);\r\n        }\r\n\r\n        // Validar criança CEPAS se ativa\r\n        if (membro.crianca_cepas && membro.crianca_cepas.ativa) {\r\n            if (!membro.crianca_cepas.data_inicio) {\r\n                errors.push(`Membro ${membroNum}: Data de início no CEPAS é obrigatória quando participa do programa`);\r\n            }\r\n        }\r\n    });\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n    };\r\n}\r\n\r\n/**\r\n * Valida dados da entrevista\r\n * @param {Object} entrevista - Dados da entrevista\r\n * @returns {Object} { isValid: boolean, errors: string[] }\r\n */\r\nexport function validateEntrevistaData(entrevista) {\r\n    const errors = [];\r\n\r\n    // Data da entrevista é obrigatória\r\n    if (!entrevista.data_entrevista) {\r\n        errors.push('Data da entrevista é obrigatória');\r\n    } else {\r\n        const dataEntrevista = new Date(entrevista.data_entrevista);\r\n        const hoje = new Date();\r\n        \r\n        if (dataEntrevista > hoje) {\r\n            errors.push('Data da entrevista não pode ser futura');\r\n        }\r\n    }\r\n\r\n    // Validar limites de caracteres\r\n    if (entrevista.entrevistado && entrevista.entrevistado.length > 150) {\r\n        errors.push('Nome do entrevistado deve ter no máximo 150 caracteres');\r\n    }\r\n\r\n    if (entrevista.telefone_contato && entrevista.telefone_contato.length > 30) {\r\n        errors.push('Telefone de contato deve ter no máximo 30 caracteres');\r\n    }\r\n\r\n    return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n    };\r\n}\r\n\r\n/**\r\n * Formata mensagens de erro para exibição\r\n * @param {string[]} errors - Array de erros\r\n * @returns {string} Mensagem formatada\r\n */\r\nexport function formatErrorMessages(errors) {\r\n    if (errors.length === 0) return '';\r\n    \r\n    if (errors.length === 1) {\r\n        return errors[0];\r\n    }\r\n    \r\n    return `Foram encontrados ${errors.length} problemas:\\n• ${errors.join('\\n• ')}`;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}