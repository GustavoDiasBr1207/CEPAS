{"ast":null,"code":"import _objectSpread from\"C:/Users/JoaoPedro/Desktop/CEPAS/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/pages/EditarFamilia.js\nimport React,{useState,useEffect}from'react';import Formulario from'../components/Formulario';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditarFamilia=_ref=>{let{familiaId,onVoltar,onSucesso}=_ref;const[loading,setLoading]=useState(false);const[loadingData,setLoadingData]=useState(true);const[message,setMessage]=useState({text:'',type:''});const[connectionStatus,setConnectionStatus]=useState('testing');const[dadosOriginais,setDadosOriginais]=useState(null);const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:3001/api';// Testar conexão e carregar dados quando a página carrega\nuseEffect(()=>{const testConnection=async()=>{try{const pingUrl=\"\".concat(API_BASE_URL,\"/ping\");const response=await fetch(pingUrl);if(response.ok){setConnectionStatus('connected');}else{setConnectionStatus('error');}}catch(error){setConnectionStatus('error');}};const carregarDadosFamilia=async()=>{if(!familiaId)return;setLoading(true);try{const response=await fetch(\"\".concat(API_BASE_URL,\"/familia/\").concat(familiaId));if(response.ok){const result=await response.json();if(result.data){setDadosOriginais(result.data);}}else{setMessage({text:'Erro ao carregar dados da família',type:'error'});}}catch(error){setMessage({text:\"Erro: \".concat(error.message),type:'error'});}finally{setLoading(false);}};const inicializar=async()=>{await testConnection();if(familiaId){await carregarDadosFamilia();}setLoadingData(false);};inicializar();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[familiaId]);// Função para carregar família específica\nconst carregarFamilia=async id=>{try{console.log(\"Carregando fam\\xEDlia ID: \".concat(id));const response=await fetch(\"\".concat(API_BASE_URL,\"/familia/\").concat(id));if(!response.ok){throw new Error(\"Erro ao carregar fam\\xEDlia: \".concat(response.status));}const dados=await response.json();console.log('Dados carregados:',dados);return dados;}catch(error){console.error('Erro ao carregar família:',error);throw error;}};const handleSave=async dadosDaFamilia=>{setLoading(true);setMessage({text:'',type:''});try{console.log('=== INICIANDO EDIÇÃO ===');console.log(\"Editando fam\\xEDlia ID: \".concat(familiaId));console.log('Dados da família sendo enviados:',JSON.stringify(dadosDaFamilia,null,2));// Fazer requisição de atualização\nconst url=\"\".concat(API_BASE_URL,\"/familia/\").concat(familiaId);console.log('URL de atualização:',url);const response=await fetch(url,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(dadosDaFamilia)});console.log('Status da resposta:',response.status);// Tenta ler a resposta como JSON primeiro\nconst responseText=await response.text();console.log('Resposta bruta do servidor:',responseText);let responseData;try{responseData=JSON.parse(responseText);}catch(parseError){console.error('Erro ao fazer parse da resposta JSON:',parseError);throw new Error(\"Resposta inv\\xE1lida do servidor: \".concat(responseText.substring(0,100),\"...\"));}if(!response.ok){throw new Error(\"Erro \".concat(response.status,\": \").concat(responseData.message||responseData.error||'Erro desconhecido'));}console.log('✅ Família atualizada com sucesso:',responseData);setMessage({text:\"\\u2705 \".concat(responseData.message||'Família atualizada com sucesso!'),type:'success'});// Chama callback de sucesso se fornecido\nif(onSucesso){setTimeout(()=>onSucesso(),2000);}}catch(err){console.error('❌ Erro ao atualizar família:',err);setMessage({text:\"\\u274C Erro ao atualizar fam\\xEDlia: \".concat(err.message),type:'error'});}finally{setLoading(false);}};const handleTesteCadastro=async()=>{// Dados de exemplo para teste (usando dados originais se disponível)\nconst dadosTeste=dadosOriginais?_objectSpread(_objectSpread({},dadosOriginais),{},{nomeResponsavel:dadosOriginais.nomeResponsavel+' (Editado)',observacoesFamilia:(dadosOriginais.observacoesFamilia||'')+' - Atualizado via edição'}):{// Dados de fallback se não houver dados originais\nnomeResponsavel:'Família Teste Editada',cpfResponsavel:'123.456.789-00',telefoneResponsavel:'(11) 99999-9999',rendaFamiliar:'1500.00',numeroMembros:'4',logradouro:'Rua Teste Editada',numero:'123',bairro:'Bairro Teste',cidade:'São Paulo',estado:'SP',cep:'01234-567',possuiAnimais:'sim',tipoAnimal:'Cachorro',quantidadeAnimais:'2',tipoMoradia:'Casa',materialParedes:'Tijolo',materialTelhado:'Telha',numeroComodos:'5',abastecimentoAgua:'Rede pública',destinoLixo:'Coleta pública',esgotamento:'Rede pública',observacoesFamilia:'Família teste para edição - dados atualizados'};await handleSave(dadosTeste);};if(loadingData){return/*#__PURE__*/_jsx(\"div\",{className:\"formulario-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-message\",children:\"\\u23F3 Carregando dados da fam\\xEDlia...\"})});}if(!dadosOriginais){return/*#__PURE__*/_jsxs(\"div\",{className:\"formulario-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message error\",children:\"\\u274C N\\xE3o foi poss\\xEDvel carregar os dados da fam\\xEDlia\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onVoltar,className:\"btn-secondary\",children:\"\\u2190 Voltar para Lista\"})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formulario-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formulario-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u270F\\uFE0F Editar Fam\\xEDlia\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Modifique os dados da fam\\xEDlia ID: \",familiaId]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",style:{marginBottom:'20px'},children:/*#__PURE__*/_jsx(\"button\",{onClick:onVoltar,className:\"btn-secondary\",children:\"\\u2190 Voltar para Lista\"})}),message.text&&/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.type),children:message.text}),/*#__PURE__*/_jsxs(\"div\",{style:{background:'#f8f9fa',border:'1px solid #e9ecef',borderRadius:'8px',padding:'15px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD27 Informa\\xE7\\xF5es de Debug\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"API Base URL:\"}),\" \",API_BASE_URL]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Rota de Edi\\xE7\\xE3o:\"}),\" PUT /familia/\",familiaId]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status da Conex\\xE3o:\"}),\" \",connectionStatus]}),message.text&&/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\xDAltima mensagem:\"}),\" \",message.text]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTesteCadastro,disabled:loading,style:{backgroundColor:'#17a2b8',color:'white',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:loading?'not-allowed':'pointer',marginTop:'10px'},children:loading?'⏳ Atualizando...':'🧪 Testar Atualização com Dados de Exemplo'})]})]}),/*#__PURE__*/_jsx(Formulario,{onSave:handleSave,loading:loading,dadosIniciais:dadosOriginais,modoEdicao:true})]});};export default EditarFamilia;","map":{"version":3,"names":["React","useState","useEffect","Formulario","jsx","_jsx","jsxs","_jsxs","EditarFamilia","_ref","familiaId","onVoltar","onSucesso","loading","setLoading","loadingData","setLoadingData","message","setMessage","text","type","connectionStatus","setConnectionStatus","dadosOriginais","setDadosOriginais","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","testConnection","pingUrl","concat","response","fetch","ok","error","carregarDadosFamilia","result","json","data","inicializar","carregarFamilia","id","console","log","Error","status","dados","handleSave","dadosDaFamilia","JSON","stringify","url","method","headers","body","responseText","responseData","parse","parseError","substring","setTimeout","err","handleTesteCadastro","dadosTeste","_objectSpread","nomeResponsavel","observacoesFamilia","cpfResponsavel","telefoneResponsavel","rendaFamiliar","numeroMembros","logradouro","numero","bairro","cidade","estado","cep","possuiAnimais","tipoAnimal","quantidadeAnimais","tipoMoradia","materialParedes","materialTelhado","numeroComodos","abastecimentoAgua","destinoLixo","esgotamento","className","children","onClick","style","marginBottom","background","border","borderRadius","padding","disabled","backgroundColor","color","cursor","marginTop","onSave","dadosIniciais","modoEdicao"],"sources":["C:/Users/JoaoPedro/Desktop/CEPAS/src/pages/EditarFamilia.js"],"sourcesContent":["// src/pages/EditarFamilia.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Formulario from '../components/Formulario';\r\n\r\nconst EditarFamilia = ({ familiaId, onVoltar, onSucesso }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingData, setLoadingData] = useState(true);\r\n    const [message, setMessage] = useState({ text: '', type: '' });\r\n    const [connectionStatus, setConnectionStatus] = useState('testing');\r\n    const [dadosOriginais, setDadosOriginais] = useState(null);\r\n\r\n    const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001/api';\r\n\r\n    // Testar conexão e carregar dados quando a página carrega\r\n    useEffect(() => {\r\n        const testConnection = async () => {\r\n            try {\r\n                const pingUrl = `${API_BASE_URL}/ping`;\r\n                const response = await fetch(pingUrl);\r\n                if (response.ok) {\r\n                    setConnectionStatus('connected');\r\n                } else {\r\n                    setConnectionStatus('error');\r\n                }\r\n            } catch (error) {\r\n                setConnectionStatus('error');\r\n            }\r\n        };\r\n\r\n        const carregarDadosFamilia = async () => {\r\n            if (!familiaId) return;\r\n            \r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch(`${API_BASE_URL}/familia/${familiaId}`);\r\n                if (response.ok) {\r\n                    const result = await response.json();\r\n                    if (result.data) {\r\n                        setDadosOriginais(result.data);\r\n                    }\r\n                } else {\r\n                    setMessage({ text: 'Erro ao carregar dados da família', type: 'error' });\r\n                }\r\n            } catch (error) {\r\n                setMessage({ text: `Erro: ${error.message}`, type: 'error' });\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        const inicializar = async () => {\r\n            await testConnection();\r\n            if (familiaId) {\r\n                await carregarDadosFamilia();\r\n            }\r\n            setLoadingData(false);\r\n        };\r\n        inicializar();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [familiaId]);\r\n\r\n    // Função para carregar família específica\r\n    const carregarFamilia = async (id) => {\r\n        try {\r\n            console.log(`Carregando família ID: ${id}`);\r\n            const response = await fetch(`${API_BASE_URL}/familia/${id}`);\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`Erro ao carregar família: ${response.status}`);\r\n            }\r\n            \r\n            const dados = await response.json();\r\n            console.log('Dados carregados:', dados);\r\n            \r\n            return dados;\r\n        } catch (error) {\r\n            console.error('Erro ao carregar família:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const handleSave = async (dadosDaFamilia) => {\r\n        setLoading(true);\r\n        setMessage({ text: '', type: '' });\r\n        \r\n        try {\r\n            console.log('=== INICIANDO EDIÇÃO ===');\r\n            console.log(`Editando família ID: ${familiaId}`);\r\n            console.log('Dados da família sendo enviados:', JSON.stringify(dadosDaFamilia, null, 2));\r\n            \r\n            // Fazer requisição de atualização\r\n            const url = `${API_BASE_URL}/familia/${familiaId}`;\r\n            console.log('URL de atualização:', url);\r\n            \r\n            const response = await fetch(url, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(dadosDaFamilia)\r\n            });\r\n\r\n            console.log('Status da resposta:', response.status);\r\n            \r\n            // Tenta ler a resposta como JSON primeiro\r\n            const responseText = await response.text();\r\n            console.log('Resposta bruta do servidor:', responseText);\r\n            \r\n            let responseData;\r\n            try {\r\n                responseData = JSON.parse(responseText);\r\n            } catch (parseError) {\r\n                console.error('Erro ao fazer parse da resposta JSON:', parseError);\r\n                throw new Error(`Resposta inválida do servidor: ${responseText.substring(0, 100)}...`);\r\n            }\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Erro ${response.status}: ${responseData.message || responseData.error || 'Erro desconhecido'}`);\r\n            }\r\n\r\n            console.log('✅ Família atualizada com sucesso:', responseData);\r\n            \r\n            setMessage({ \r\n                text: `✅ ${responseData.message || 'Família atualizada com sucesso!'}`, \r\n                type: 'success' \r\n            });\r\n\r\n            // Chama callback de sucesso se fornecido\r\n            if (onSucesso) {\r\n                setTimeout(() => onSucesso(), 2000);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error('❌ Erro ao atualizar família:', err);\r\n            \r\n            setMessage({ \r\n                text: `❌ Erro ao atualizar família: ${err.message}`, \r\n                type: 'error' \r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleTesteCadastro = async () => {\r\n        // Dados de exemplo para teste (usando dados originais se disponível)\r\n        const dadosTeste = dadosOriginais ? {\r\n            ...dadosOriginais,\r\n            nomeResponsavel: dadosOriginais.nomeResponsavel + ' (Editado)',\r\n            observacoesFamilia: (dadosOriginais.observacoesFamilia || '') + ' - Atualizado via edição'\r\n        } : {\r\n            // Dados de fallback se não houver dados originais\r\n            nomeResponsavel: 'Família Teste Editada',\r\n            cpfResponsavel: '123.456.789-00',\r\n            telefoneResponsavel: '(11) 99999-9999',\r\n            rendaFamiliar: '1500.00',\r\n            numeroMembros: '4',\r\n            \r\n            logradouro: 'Rua Teste Editada',\r\n            numero: '123',\r\n            bairro: 'Bairro Teste',\r\n            cidade: 'São Paulo',\r\n            estado: 'SP',\r\n            cep: '01234-567',\r\n            \r\n            possuiAnimais: 'sim',\r\n            tipoAnimal: 'Cachorro',\r\n            quantidadeAnimais: '2',\r\n            \r\n            tipoMoradia: 'Casa',\r\n            materialParedes: 'Tijolo',\r\n            materialTelhado: 'Telha',\r\n            numeroComodos: '5',\r\n            \r\n            abastecimentoAgua: 'Rede pública',\r\n            destinoLixo: 'Coleta pública',\r\n            esgotamento: 'Rede pública',\r\n            \r\n            observacoesFamilia: 'Família teste para edição - dados atualizados'\r\n        };\r\n        \r\n        await handleSave(dadosTeste);\r\n    };\r\n\r\n    if (loadingData) {\r\n        return (\r\n            <div className=\"formulario-container\">\r\n                <div className=\"loading-message\">\r\n                    ⏳ Carregando dados da família...\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!dadosOriginais) {\r\n        return (\r\n            <div className=\"formulario-container\">\r\n                <div className=\"message error\">\r\n                    ❌ Não foi possível carregar os dados da família\r\n                </div>\r\n                <button onClick={onVoltar} className=\"btn-secondary\">\r\n                    ← Voltar para Lista\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Cabeçalho */}\r\n            <div className=\"formulario-container\">\r\n                <div className=\"formulario-header\">\r\n                    <h1>✏️ Editar Família</h1>\r\n                    <p>Modifique os dados da família ID: {familiaId}</p>\r\n                </div>\r\n\r\n                {/* Botão Voltar */}\r\n                <div className=\"form-actions\" style={{ marginBottom: '20px' }}>\r\n                    <button onClick={onVoltar} className=\"btn-secondary\">\r\n                        ← Voltar para Lista\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Mensagens de status */}\r\n                {message.text && (\r\n                    <div className={`message ${message.type}`}>\r\n                        {message.text}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Debug e Teste */}\r\n                <div style={{ \r\n                    background: '#f8f9fa', \r\n                    border: '1px solid #e9ecef', \r\n                    borderRadius: '8px', \r\n                    padding: '15px', \r\n                    marginBottom: '20px' \r\n                }}>\r\n                    <h3>🔧 Informações de Debug</h3>\r\n                    <p><strong>API Base URL:</strong> {API_BASE_URL}</p>\r\n                    <p><strong>Rota de Edição:</strong> PUT /familia/{familiaId}</p>\r\n                    <p><strong>Status da Conexão:</strong> {connectionStatus}</p>\r\n                    {message.text && <p><strong>Última mensagem:</strong> {message.text}</p>}\r\n                    \r\n                    <button \r\n                        onClick={handleTesteCadastro}\r\n                        disabled={loading}\r\n                        style={{\r\n                            backgroundColor: '#17a2b8',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                            padding: '8px 16px',\r\n                            borderRadius: '4px',\r\n                            cursor: loading ? 'not-allowed' : 'pointer',\r\n                            marginTop: '10px'\r\n                        }}\r\n                    >\r\n                        {loading ? '⏳ Atualizando...' : '🧪 Testar Atualização com Dados de Exemplo'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Formulário */}\r\n            <Formulario \r\n                onSave={handleSave} \r\n                loading={loading}\r\n                dadosIniciais={dadosOriginais}\r\n                modoEdicao={true}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditarFamilia;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}