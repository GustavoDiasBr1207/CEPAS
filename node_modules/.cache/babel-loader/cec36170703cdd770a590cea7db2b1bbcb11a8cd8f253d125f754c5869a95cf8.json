{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JoaoPedro\\\\Desktop\\\\CEPAS-1\\\\src\\\\utils\\\\permissions.js\";\n// src/utils/permissions.js\n// Utilit√°rios para verifica√ß√£o de permiss√µes de usu√°rios\n\nimport { forceAdminAccess, forceAdminRouteAccess, isSuperAdmin } from '../config/adminAccess';\n\n/**\r\n * Verifica se o usu√°rio tem permiss√£o para realizar uma a√ß√£o espec√≠fica\r\n * @param {Object} user - Objeto do usu√°rio com role e outras informa√ß√µes\r\n * @param {string} action - A√ß√£o que o usu√°rio quer realizar\r\n * @param {string} resource - Recurso sobre o qual a a√ß√£o ser√° realizada\r\n * @returns {boolean} - true se permitido, false caso contr√°rio\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const hasPermission = (user, action, resource = null) => {\n  if (!user || !user.role) {\n    return false;\n  }\n\n  // üîì PRIMEIRO: Verifica se √© admin com acesso for√ßado (BYPASS TOTAL)\n  if (forceAdminAccess(user, action, resource)) {\n    return true;\n  }\n  const userRole = (user.role || user.tipo_usuario || '').toLowerCase();\n\n  // ADMIN tem poder M√ÅXIMO - pode fazer TUDO no sistema\n  if (userRole === 'admin' || userRole === 'administrador') {\n    console.log(`üîì ADMIN PERMISSION: ${user.nome_usuario || user.email} tem acesso TOTAL como administrador`);\n    return true;\n  }\n\n  // Define as permiss√µes por role\n  const permissions = {\n    coordenador: {\n      // Coordenador pode fazer quase tudo, exceto gerenciar usu√°rios\n      read: ['familias', 'monitores', 'relatorios', 'entrevistas', 'cadastros'],\n      write: ['familias', 'monitores', 'entrevistas', 'cadastros'],\n      update: ['familias', 'monitores', 'entrevistas', 'cadastros'],\n      delete: ['familias', 'monitores', 'entrevistas']\n    },\n    monitor: {\n      // Monitor pode cadastrar e editar fam√≠lias, ver listagens\n      read: ['familias', 'monitores', 'relatorios'],\n      write: ['familias', 'entrevistas'],\n      update: ['familias', 'entrevistas'],\n      delete: [] // Monitor n√£o pode deletar\n    },\n    visualizador: {\n      // Visualizador s√≥ pode ver dados\n      read: ['familias', 'monitores', 'relatorios'],\n      write: [],\n      update: [],\n      delete: []\n    }\n  };\n  const userPermissions = permissions[userRole];\n  if (!userPermissions) {\n    return false;\n  }\n\n  // Verifica se o usu√°rio tem permiss√£o para a a√ß√£o espec√≠fica\n  if (userPermissions[action] && userPermissions[action].includes(resource)) {\n    return true;\n  }\n  return false;\n};\n\n/**\r\n * Verifica se o usu√°rio pode acessar uma rota espec√≠fica\r\n * @param {Object} user - Objeto do usu√°rio\r\n * @param {string} route - Rota que o usu√°rio quer acessar\r\n * @returns {boolean} - true se permitido, false caso contr√°rio\r\n */\nexport const canAccessRoute = (user, route) => {\n  if (!user) {\n    return false;\n  }\n\n  // üîì PRIMEIRO: Verifica se √© admin com acesso for√ßado (BYPASS TOTAL)\n  if (forceAdminRouteAccess(user, route)) {\n    return true;\n  }\n  const userRole = (user.role || user.tipo_usuario || '').toLowerCase();\n\n  // ADMIN pode acessar TODAS as rotas\n  if (userRole === 'admin' || userRole === 'administrador') {\n    console.log(`üîì ADMIN ROUTE: ${user.nome_usuario || user.email} pode acessar QUALQUER rota como administrador`);\n    return true;\n  }\n\n  // Define as rotas permitidas por role\n  const routePermissions = {\n    coordenador: ['/cadastro-familia', '/cadastro-monitor', '/lista-familias', '/lista-monitores', '/editar-familia', '/consulta'],\n    monitor: ['/cadastro-familia', '/lista-familias', '/lista-monitores', '/editar-familia', '/consulta'],\n    visualizador: ['/lista-familias', '/lista-monitores', '/consulta']\n  };\n  const allowedRoutes = routePermissions[userRole] || [];\n  return allowedRoutes.some(allowedRoute => route.startsWith(allowedRoute));\n};\n\n/**\r\n * Retorna uma mensagem de erro personalizada baseada na permiss√£o negada\r\n * @param {Object} user - Objeto do usu√°rio\r\n * @param {string} action - A√ß√£o negada\r\n * @param {string} resource - Recurso relacionado\r\n * @returns {string} - Mensagem de erro\r\n */\nexport const getPermissionErrorMessage = (user, action, resource) => {\n  const userRole = (user === null || user === void 0 ? void 0 : user.role) || 'usu√°rio n√£o autenticado';\n  const actionMessages = {\n    'delete': `Seu perfil (${userRole}) n√£o tem permiss√£o para deletar ${resource}. Apenas administradores e coordenadores podem realizar esta a√ß√£o.`,\n    'write': `Seu perfil (${userRole}) n√£o tem permiss√£o para criar ${resource}. Contate um administrador.`,\n    'update': `Seu perfil (${userRole}) n√£o tem permiss√£o para editar ${resource}. Contate um administrador.`,\n    'read': `Seu perfil (${userRole}) n√£o tem permiss√£o para visualizar ${resource}.`\n  };\n  return actionMessages[action] || `Permiss√£o negada para a a√ß√£o '${action}' no recurso '${resource}'.`;\n};\n\n/**\r\n * Utilit√°rio para criar componentes protegidos por permiss√£o\r\n * @param {Function} Component - Componente a ser renderizado\r\n * @param {string} requiredPermission - Permiss√£o necess√°ria\r\n * @param {string} resource - Recurso relacionado\r\n * @returns {Function} - Componente protegido\r\n */\nexport const withPermission = (Component, action, resource) => {\n  return function ProtectedComponent(props) {\n    const user = props.user || props.auth && props.auth.user;\n    if (!hasPermission(user, action, resource)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          textAlign: 'center',\n          background: '#f8d7da',\n          border: '1px solid #f5c6cb',\n          borderRadius: '8px',\n          color: '#721c24'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDEAB Acesso Negado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getPermissionErrorMessage(user, action, resource)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Seu perfil:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 24\n          }, this), \" \", (user === null || user === void 0 ? void 0 : user.role) || 'N√£o autenticado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }, this);\n  };\n};\nexport default {\n  hasPermission,\n  canAccessRoute,\n  getPermissionErrorMessage,\n  withPermission\n};","map":{"version":3,"names":["forceAdminAccess","forceAdminRouteAccess","isSuperAdmin","jsxDEV","_jsxDEV","hasPermission","user","action","resource","role","userRole","tipo_usuario","toLowerCase","console","log","nome_usuario","email","permissions","coordenador","read","write","update","delete","monitor","visualizador","userPermissions","includes","canAccessRoute","route","routePermissions","allowedRoutes","some","allowedRoute","startsWith","getPermissionErrorMessage","actionMessages","withPermission","Component","ProtectedComponent","props","auth","style","padding","textAlign","background","border","borderRadius","color","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/JoaoPedro/Desktop/CEPAS-1/src/utils/permissions.js"],"sourcesContent":["// src/utils/permissions.js\r\n// Utilit√°rios para verifica√ß√£o de permiss√µes de usu√°rios\r\n\r\nimport { forceAdminAccess, forceAdminRouteAccess, isSuperAdmin } from '../config/adminAccess';\r\n\r\n/**\r\n * Verifica se o usu√°rio tem permiss√£o para realizar uma a√ß√£o espec√≠fica\r\n * @param {Object} user - Objeto do usu√°rio com role e outras informa√ß√µes\r\n * @param {string} action - A√ß√£o que o usu√°rio quer realizar\r\n * @param {string} resource - Recurso sobre o qual a a√ß√£o ser√° realizada\r\n * @returns {boolean} - true se permitido, false caso contr√°rio\r\n */\r\nexport const hasPermission = (user, action, resource = null) => {\r\n    if (!user || !user.role) {\r\n        return false;\r\n    }\r\n\r\n    // üîì PRIMEIRO: Verifica se √© admin com acesso for√ßado (BYPASS TOTAL)\r\n    if (forceAdminAccess(user, action, resource)) {\r\n        return true;\r\n    }\r\n\r\n    const userRole = (user.role || user.tipo_usuario || '').toLowerCase();\r\n\r\n    // ADMIN tem poder M√ÅXIMO - pode fazer TUDO no sistema\r\n    if (userRole === 'admin' || userRole === 'administrador') {\r\n        console.log(`üîì ADMIN PERMISSION: ${user.nome_usuario || user.email} tem acesso TOTAL como administrador`);\r\n        return true;\r\n    }\r\n\r\n    // Define as permiss√µes por role\r\n    const permissions = {\r\n        coordenador: {\r\n            // Coordenador pode fazer quase tudo, exceto gerenciar usu√°rios\r\n            read: ['familias', 'monitores', 'relatorios', 'entrevistas', 'cadastros'],\r\n            write: ['familias', 'monitores', 'entrevistas', 'cadastros'],\r\n            update: ['familias', 'monitores', 'entrevistas', 'cadastros'],\r\n            delete: ['familias', 'monitores', 'entrevistas']\r\n        },\r\n        monitor: {\r\n            // Monitor pode cadastrar e editar fam√≠lias, ver listagens\r\n            read: ['familias', 'monitores', 'relatorios'],\r\n            write: ['familias', 'entrevistas'],\r\n            update: ['familias', 'entrevistas'],\r\n            delete: [] // Monitor n√£o pode deletar\r\n        },\r\n        visualizador: {\r\n            // Visualizador s√≥ pode ver dados\r\n            read: ['familias', 'monitores', 'relatorios'],\r\n            write: [],\r\n            update: [],\r\n            delete: []\r\n        }\r\n    };\r\n\r\n    const userPermissions = permissions[userRole];\r\n    if (!userPermissions) {\r\n        return false;\r\n    }\r\n\r\n    // Verifica se o usu√°rio tem permiss√£o para a a√ß√£o espec√≠fica\r\n    if (userPermissions[action] && userPermissions[action].includes(resource)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifica se o usu√°rio pode acessar uma rota espec√≠fica\r\n * @param {Object} user - Objeto do usu√°rio\r\n * @param {string} route - Rota que o usu√°rio quer acessar\r\n * @returns {boolean} - true se permitido, false caso contr√°rio\r\n */\r\nexport const canAccessRoute = (user, route) => {\r\n    if (!user) {\r\n        return false;\r\n    }\r\n\r\n    // üîì PRIMEIRO: Verifica se √© admin com acesso for√ßado (BYPASS TOTAL)\r\n    if (forceAdminRouteAccess(user, route)) {\r\n        return true;\r\n    }\r\n\r\n    const userRole = (user.role || user.tipo_usuario || '').toLowerCase();\r\n\r\n    // ADMIN pode acessar TODAS as rotas\r\n    if (userRole === 'admin' || userRole === 'administrador') {\r\n        console.log(`üîì ADMIN ROUTE: ${user.nome_usuario || user.email} pode acessar QUALQUER rota como administrador`);\r\n        return true;\r\n    }\r\n\r\n    // Define as rotas permitidas por role\r\n    const routePermissions = {\r\n        coordenador: [\r\n            '/cadastro-familia',\r\n            '/cadastro-monitor', \r\n            '/lista-familias',\r\n            '/lista-monitores',\r\n            '/editar-familia',\r\n            '/consulta'\r\n        ],\r\n        monitor: [\r\n            '/cadastro-familia',\r\n            '/lista-familias',\r\n            '/lista-monitores',\r\n            '/editar-familia',\r\n            '/consulta'\r\n        ],\r\n        visualizador: [\r\n            '/lista-familias',\r\n            '/lista-monitores',\r\n            '/consulta'\r\n        ]\r\n    };\r\n\r\n    const allowedRoutes = routePermissions[userRole] || [];\r\n    return allowedRoutes.some(allowedRoute => route.startsWith(allowedRoute));\r\n};\r\n\r\n/**\r\n * Retorna uma mensagem de erro personalizada baseada na permiss√£o negada\r\n * @param {Object} user - Objeto do usu√°rio\r\n * @param {string} action - A√ß√£o negada\r\n * @param {string} resource - Recurso relacionado\r\n * @returns {string} - Mensagem de erro\r\n */\r\nexport const getPermissionErrorMessage = (user, action, resource) => {\r\n    const userRole = user?.role || 'usu√°rio n√£o autenticado';\r\n    \r\n    const actionMessages = {\r\n        'delete': `Seu perfil (${userRole}) n√£o tem permiss√£o para deletar ${resource}. Apenas administradores e coordenadores podem realizar esta a√ß√£o.`,\r\n        'write': `Seu perfil (${userRole}) n√£o tem permiss√£o para criar ${resource}. Contate um administrador.`,\r\n        'update': `Seu perfil (${userRole}) n√£o tem permiss√£o para editar ${resource}. Contate um administrador.`,\r\n        'read': `Seu perfil (${userRole}) n√£o tem permiss√£o para visualizar ${resource}.`\r\n    };\r\n\r\n    return actionMessages[action] || `Permiss√£o negada para a a√ß√£o '${action}' no recurso '${resource}'.`;\r\n};\r\n\r\n/**\r\n * Utilit√°rio para criar componentes protegidos por permiss√£o\r\n * @param {Function} Component - Componente a ser renderizado\r\n * @param {string} requiredPermission - Permiss√£o necess√°ria\r\n * @param {string} resource - Recurso relacionado\r\n * @returns {Function} - Componente protegido\r\n */\r\nexport const withPermission = (Component, action, resource) => {\r\n    return function ProtectedComponent(props) {\r\n        const user = props.user || (props.auth && props.auth.user);\r\n        \r\n        if (!hasPermission(user, action, resource)) {\r\n            return (\r\n                <div style={{\r\n                    padding: '20px',\r\n                    textAlign: 'center',\r\n                    background: '#f8d7da',\r\n                    border: '1px solid #f5c6cb',\r\n                    borderRadius: '8px',\r\n                    color: '#721c24'\r\n                }}>\r\n                    <h3>üö´ Acesso Negado</h3>\r\n                    <p>{getPermissionErrorMessage(user, action, resource)}</p>\r\n                    <p><strong>Seu perfil:</strong> {user?.role || 'N√£o autenticado'}</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <Component {...props} />;\r\n    };\r\n};\r\n\r\nexport default {\r\n    hasPermission,\r\n    canAccessRoute,\r\n    getPermissionErrorMessage,\r\n    withPermission\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}