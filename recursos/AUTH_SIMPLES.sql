-- ========================
-- SCRIPT SIMPLES - Apenas Tabelas de Autenticação
-- ========================

-- Tabela de Usuários
CREATE TABLE Usuario (
  id_usuario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  username VARCHAR2(50) NOT NULL UNIQUE,
  nome_completo VARCHAR2(150) NOT NULL,
  email VARCHAR2(150) NOT NULL UNIQUE,
  password_hash VARCHAR2(255) NOT NULL,
  tipo_usuario VARCHAR2(20) DEFAULT 'visualizador',
  ativo NUMBER(1,0) DEFAULT 1,
  ultimo_login DATE,
  tentativas_login NUMBER DEFAULT 0,
  bloqueado_ate DATE,
  token_reset VARCHAR2(255),
  token_reset_expira DATE,
  created_at DATE DEFAULT SYSDATE,
  updated_at DATE,
  usuario_responsavel VARCHAR2(100),
  CONSTRAINT chk_tipo_usuario CHECK (tipo_usuario IN ('admin','coordenador','monitor','visualizador')),
  CONSTRAINT chk_ativo CHECK (ativo IN (0,1))
);

-- Tokens de Refresh
CREATE TABLE RefreshToken (
  id_token NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_usuario NUMBER NOT NULL,
  token_hash VARCHAR2(255) NOT NULL,
  expires_at DATE NOT NULL,
  revogado NUMBER(1,0) DEFAULT 0,
  ip_address VARCHAR2(45),
  user_agent VARCHAR2(500),
  created_at DATE DEFAULT SYSDATE,
  CONSTRAINT fk_refresh_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario),
  CONSTRAINT chk_revogado CHECK (revogado IN (0,1))
);

-- Log do Sistema
CREATE TABLE LogSistema (
  id_log NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  id_usuario NUMBER,
  acao VARCHAR2(100) NOT NULL,
  tabela_afetada VARCHAR2(50),
  id_registro NUMBER,
  ip_address VARCHAR2(45),
  user_agent VARCHAR2(500),
  detalhes CLOB,
  created_at DATE DEFAULT SYSDATE,
  CONSTRAINT fk_log_usuario FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- Índices
CREATE INDEX idx_refresh_usuario ON RefreshToken(id_usuario);
CREATE INDEX idx_refresh_token ON RefreshToken(token_hash);
CREATE INDEX idx_log_usuario ON LogSistema(id_usuario);
CREATE INDEX idx_log_acao ON LogSistema(acao);
CREATE INDEX idx_log_data ON LogSistema(created_at);

-- Usuários iniciais (senhas temporárias)
INSERT INTO Usuario (username, nome_completo, email, password_hash, tipo_usuario, usuario_responsavel) 
VALUES ('admin', 'Administrador do Sistema', 'admin@cepas.com', 'temp_admin', 'admin', 'SISTEMA');

INSERT INTO Usuario (username, nome_completo, email, password_hash, tipo_usuario, usuario_responsavel) 
VALUES ('monitor1', 'Monitor', 'monitor@cepas.com', 'temp_monitor', 'monitor', 'admin');

INSERT INTO Usuario (username, nome_completo, email, password_hash, tipo_usuario, usuario_responsavel) 
VALUES ('visual1', 'Visualizador', 'visualizador@cepas.com', 'temp_visual', 'visualizador', 'admin');

COMMIT;

-- Verificação
SELECT 'Criação concluída!' as resultado FROM dual;
SELECT table_name FROM user_tables WHERE table_name IN ('USUARIO', 'REFRESHTOKEN', 'LOGSISTEMA') ORDER BY table_name;